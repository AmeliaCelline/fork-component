{
  "$defs": {
    "ticket": {
      "subject": {
        "description": "Subject of the ticket",
        "title": "Subject",
        "type": "string",
        "instillUIOrder": 0
      },
      "description-text": {
        "description": "Content of the ticket",
        "title": "Description Text",
        "type": "string",
        "instillUIOrder": 1
      },
      "source": {
        "description": "Source of the ticket. Eg: Email",
        "title": "Source",
        "type": "string",
        "instillUIOrder": 2
      },
      "status": {
        "description": "Status of the ticket. Eg: Pending",
        "title": "Status",
        "type": "string",
        "instillUIOrder": 3
      },
      "priority": {
        "description": "Priority of the ticket. Eg: Medium",
        "title": "Priority",
        "type": "string",
        "instillUIOrder": 4
      },
      "association-type": {
        "description": "Used to determine whether a ticket is a parent, child, tracker or related ticket",
        "title": "Association Type",
        "type": "string",
        "instillUIOrder": 5
      },
      "associated-ticket-list": {
        "description": "List of associated ticket IDs",
        "title": "Associated Ticket List",
        "type": "array",
        "instillUIOrder": 6
      },
      "tags": {
        "description": "Tags associated with the ticket",
        "title": "Tags",
        "type": "array",
        "instillUIOrder": 7
      },
      "cc-emails": {
        "description": "Email addresses added in the 'cc' field of the incoming ticket email",
        "title": "CC Emails",
        "type": "array",
        "instillUIOrder": 8
      },
      "forward-emails": {
        "description": "Email addresses added while forwarding a ticket",
        "title": "Forward Emails",
        "type": "array",
        "instillUIOrder": 9
      },
      "reply-cc-emails": {
        "description": "Email addresses added while replying to a ticket",
        "title": "Reply CC Emails",
        "type": "array",
        "instillUIOrder": 10
      },
      "requester-id": {
        "description": "ID of the requester",
        "title": "Requester ID",
        "type": "integer",
        "instillUIOrder": 11
      },
      "responder-id": {
        "description": "ID of the agent to whom the ticket has been assigned",
        "title": "Responder ID",
        "type": "integer",
        "instillUIOrder": 12
      },
      "company-id": {
        "description": "ID of the company to which this ticket belongs",
        "title": "Company ID",
        "type": "integer",
        "instillUIOrder": 13
      },
      "group-id": {
        "description": "ID of the group to which the ticket has been assigned",
        "title": "Group ID",
        "type": "integer",
        "instillUIOrder": 14
      },
      "product-id": {
        "description": "ID of the product to which the ticket is associated",
        "title": "Product ID",
        "type": "integer",
        "instillUIOrder": 15
      },
      "support-email": {
        "description": "Support email address. You can find it in admin -> email (under channel).",
        "title": "Support Email",
        "type": "string",
        "instillUIOrder": 16
      },
      "to-emails": {
        "description": "Email addresses to which the ticket was originally sent",
        "title": "To Emails",
        "type": "array",
        "instillUIOrder": 17
      },
      "spam": {
        "description": "Set to true if the ticket is marked as spam",
        "title": "Spam",
        "type": "boolean",
        "instillUIOrder": 18
      },
      "is-escalated": {
        "description": "Set to true if the ticket has been escalated",
        "title": "Is Escalated",
        "type": "boolean",
        "instillUIOrder": 19
      },
      "first-response-due-by": {
        "description": "Timestamp that denotes when the first response is due. You can adjust this by going to admin -> SLA policy (under Workflows).",
        "title": "First Response Due By",
        "type": "string",
        "instillUIOrder": 20
      },
      "first-response-escalated": {
        "description": "Set to true if the ticket has been escalated as the result of first response time being breached",
        "title": "First Response Escalated",
        "type": "boolean",
        "instillUIOrder": 21
      },
      "next-response-due-by": {
        "description": "Timestamp that denotes when the next response is due. You can adjust this by going to admin -> SLA policy (under Workflows).",
        "title": "Next Response Due By",
        "type": "string",
        "instillUIOrder": 22
      },
      "next-response-escalated": {
        "description": "Set to true if the ticket has been escalated as the result of next response time being breached",
        "title": "Next Response Escalated",
        "type": "boolean",
        "instillUIOrder": 23
      },
      "created-at": {
        "description": "Timestamp that denotes when the ticket was created. In UTC format.",
        "title": "Created At",
        "type": "string",
        "instillUIOrder": 24
      },
      "updated-at": {
        "description": "Timestamp that denotes when the ticket was last updated. In UTC format.",
        "title": "Updated At",
        "type": "string",
        "instillUIOrder": 25
      },
      "attachments": {
        "description": "Ticket attachments (cannot be more than 20MB)",
        "title": "Attachments",
        "type": "array",
        "instillUIOrder": 26
      },
      "sentiment-score": {
        "description": "Freshdesk uses AI to assess the emotional tone and attitude expressed in customer interaction.",
        "title": "Sentiment Score",
        "type": "integer",
        "instillUIOrder": 27
      },
      "intial-sentiment-score": {
        "description": "The initial sentiment score of the ticket",
        "title": "Initial Sentiment Score",
        "type": "integer",
        "instillUIOrder": 28
      }
    }
  },
  "TASK_GET_TICKET": {
    "instillShortDescription": "Get ticket using ID",
    "input": {
      "description": "Ticket ID",
      "instillUIOrder": 0,
      "instillEditOnNodeFields": ["ticket-id"],
      "properties": {
        "ticket-id": {
          "description": "The ID of the ticket",
          "instillAcceptFormats": ["integer"],
          "instillUpstreamTypes": ["value", "reference"],
          "instillUIMultiline": false,
          "instillUIOrder": 0,
          "title": "Ticket ID",
          "type": "integer"
        }
      },
      "required": ["ticket-id"],
      "title": "Input",
      "type": "object"
    },
    "output": {
      "description": "Ticket information",
      "instillUIOrder": 0,
      "properties": {
        "subject": {
          "$ref": "#/$defs/ticket/subject",
          "instillFormat": "string"
        },
        "description-text": {
          "$ref": "#/$defs/ticket/description-text",
          "instillFormat": "string"
        },
        "source": {
          "$ref": "#/$defs/ticket/source",
          "instillFormat": "string"
        },
        "status": {
          "$ref": "#/$defs/ticket/status",
          "instillFormat": "string"
        },
        "priority": {
          "$ref": "#/$defs/ticket/priority",
          "instillFormat": "string"
        },
        "association-type": {
          "$ref": "#/$defs/ticket/association-type",
          "instillFormat": "string"
        },
        "associated-ticket-list": {
          "$ref": "#/$defs/ticket/associated-ticket-list",
          "instillFormat": "array:integer",
          "items": {
            "title": "Associated Ticket",
            "type": "string",
            "description": "The ID of the ticket associated with the current ticket",
            "instillFormat": "integer"
          }
        },
        "tags": {
          "$ref": "#/$defs/ticket/tags",
          "instillFormat": "array:string",
          "items": {
            "title": "Tag",
            "type": "string",
            "description": "Tag associated with the ticket",
            "instillFormat": "string"
          }
        },
        "cc-emails": {
          "$ref": "#/$defs/ticket/cc-emails",
          "instillFormat": "array:string",
          "items": {
            "title": "CC Email",
            "type": "string",
            "description": "One of the email address added in the 'cc' field of the incoming ticket email",
            "instillFormat": "string"
          }
        },
        "forward-emails": {
          "$ref": "#/$defs/ticket/forward-emails",
          "instillFormat": "array:string",
          "items": {
            "title": "Foward Email",
            "type": "string",
            "description": "One of the email address added while forwarding a ticket",
            "instillFormat": "string"
          }
        },
        "reply-cc-emails": {
          "$ref": "#/$defs/ticket/reply-cc-emails",
          "instillFormat": "array:string",
          "items": {
            "title": "Reply CC Email",
            "type": "string",
            "description": "One of the email address added while replying to a ticket",
            "instillFormat": "string"
          }
        },
        "requester-id": {
          "$ref": "#/$defs/ticket/requester-id",
          "instillFormat": "integer"
        },
        "responder-id": {
          "$ref": "#/$defs/ticket/responder-id",
          "instillFormat": "integer"
        },
        "company-id": {
          "$ref": "#/$defs/ticket/company-id",
          "instillFormat": "integer"
        },
        "group-id": {
          "$ref": "#/$defs/ticket/group-id",
          "instillFormat": "integer"
        },
        "product-id": {
          "$ref": "#/$defs/ticket/product-id",
          "instillFormat": "integer"
        },
        "support-email": {
          "$ref": "#/$defs/ticket/support-email",
          "instillFormat": "string"
        },
        "to-emails": {
          "$ref": "#/$defs/ticket/to-emails",
          "instillFormat": "array:string",
          "items": {
            "title": "To Email",
            "type": "string",
            "description": "One of the email address to which the ticket was originally sent",
            "instillFormat": "string"
          }
        },
        "spam": {
          "$ref": "#/$defs/ticket/spam",
          "instillFormat": "boolean"
        },
        "is-escalated": {
          "$ref": "#/$defs/ticket/is-escalated",
          "instillFormat": "boolean"
        },
        "first-response-due-by": {
          "$ref": "#/$defs/ticket/first-response-due-by",
          "instillFormat": "string"
        },
        "first-response-escalated": {
          "$ref": "#/$defs/ticket/first-response-escalated",
          "instillFormat": "boolean"
        },
        "next-response-due-by": {
          "$ref": "#/$defs/ticket/next-response-due-by",
          "instillFormat": "string"
        },
        "next-response-escalated": {
          "$ref": "#/$defs/ticket/next-response-escalated",
          "instillFormat": "boolean"
        },
        "created-at": {
          "$ref": "#/$defs/ticket/created-at",
          "instillFormat": "string"
        },
        "updated-at": {
          "$ref": "#/$defs/ticket/updated-at",
          "instillFormat": "string"
        },
        "attachments": {
          "$ref": "#/$defs/ticket/attachments",
          "instillFormat": "array",
          "items": {
            "title": "Attachment",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the file",
                "instillFormat": "string",
                "instillUIOrder": 0,
                "title": "Attachment Name",
                "type": "string"
              },
              "content-type": {
                "description": "The type of the file",
                "instillFormat": "string",
                "instillUIOrder": 1,
                "title": "Attachment Content Type",
                "type": "string"
              },
              "url": {
                "description": "The URL to the attachment.",
                "instillFormat": "string",
                "instillUIOrder": 2,
                "title": "Attachment URL",
                "type": "string"
              }
            },
            "required": ["name", "content-type", "url"]
          }
        },
        "sentiment-score": {
          "$ref": "#/$defs/ticket/sentiment-score",
          "instillFormat": "integer"
        },
        "intial-sentiment-score": {
          "$ref": "#/$defs/ticket/intial-sentiment-score",
          "instillFormat": "integer"
        }
      },
      "required": ["requester-id","subject","description-text","source","status","priority","to-emails"],
      "title": "Output",
      "type": "object"
    }
  }
}
